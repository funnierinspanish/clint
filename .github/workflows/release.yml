name: Release

on:
  push:
    tags:
      - 'v*'

# Add explicit permissions for the workflow
permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - name: Get the version
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  build-binaries:
    name: Build Binaries
    needs: get-version
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: ""
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create artifact directory
      run: mkdir -p artifacts

    - name: Copy binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/clint artifacts/clint-${{ needs.get-version.outputs.version }}-${{ matrix.target }}${{ matrix.suffix }}

    - name: Copy binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        copy target\${{ matrix.target }}\release\clint.exe artifacts\clint-${{ needs.get-version.outputs.version }}-${{ matrix.target }}.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clint-${{ matrix.target }}
        path: artifacts/*

  create-release:
    name: Create Release
    needs: [get-version, build-binaries]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Create release with binaries
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.get-version.outputs.version }}
        name: Release ${{ needs.get-version.outputs.version }}
        draft: false
        prerelease: false
        files: release-artifacts/*/*
        make_latest: true
        generate_release_notes: true

